        <article>

            <h2 class="blog-title">OCTOBER 5, 2014: TOWARDS RESPONSIVE WEB DESIGN (RWD)</h2>

            <div class="content hide">

              <div class="videowrap give-space text-center">
              <iframe src="//www.youtube.com/embed/videoseries?list=PLanvKbpjZonTJpSoZzm4usIS122onHWzs" frameborder="0" allowfullscreen></iframe>
              </div>

              <p class="tab">
                ↑ A new playlist to get me motivated to write these things :-)
              </p>

              <p class="tab">
                I've been reading a lot of
                <a href="https://twitter.com/iamdevloper">@iamdevloper</a> lately
                and when I saw the following tweet, I laughed hard and also felt
                weird because I had to Google some of the things mentioned in the
                tweet:
              </p>

              <blockquote class="twitter-tweet tw-align-center" lang="en"><p>Starting a basic website in 2014:&#10;&#10;1. Install Node&#10;2. Install Bower&#10;3. Pick CSS framework&#10;4. Pick responsive approach&#10;…&#10;&#10;47. Write some HTML</p>&mdash; I Am Devloper (@iamdevloper) <a href="https://twitter.com/iamdevloper/status/517616294909464576">October 2, 2014</a></blockquote>
              <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

              <p class="tab">
                I guess I won't talk about Node or Bower since I'm currently not working
                with either one of those things, so let's talk <em>responsiveness</em>
                today in an effort to understand that above tweet a little more
                and maybe learn a bit about web development, as well.
              </p>

              <p class="tab">
                <em>Responsive web design</em> -- which has an acryonym, <a href="http://en.wikipedia.org/wiki/Responsive_web_design" target="_blank">
                RWD</a>, to fully comply with Secret Web Development Language
                Standards (SWDLS) -- is web design that looks and functions well
                across many kinds of devices.
                <a href="http://learn.shayhowe.com/advanced-html-css/responsive-web-design/" target="_blank">
                According to Shay Howard</a>, RWD started a few years ago based on
                <a href="http://www.abookapart.com/products/responsive-web-design/" target="_blank">
                Ethan Marcotte's ideas</a>. Responsive Web Design is similar to
                Adapative Web Design in the sense that both approaches emphasize
                designs that look good across all different kinds of devices, but
                Adaptive Web Designs usually plan to display across different devices with
                <a href="http://johnpolacek.github.io/scrolldeck.js/decks/responsive/" target="_blank">
                fixed width layouts</a>, while in Responsive Web Design, layouts
                are made using fluid widths, using flexible media and images and
                also using <a href="http://ux.stackexchange.com/questions/24406/what-is-the-exact-difference-between-fluid-and-responsive-design" target="_blank">
                CSS media queries</a> to present different layouts based on the
                device. Many people seem to recommend a combination of Responsive +
                Adaptive.
              </p>

              <p class="tab">
                Some easy changes to your layout for a more reponsive/fluid design include:
                  <ul>
                    <li>When you size your fonts, go for <a href="http://en.wikipedia.org/wiki/Em_(typography)" target="blank">
                    <em>em</em></a> over <em>px</em> (pixels).</li>
                    <li>When sizing other elements in your layout, set measurements
                      using percentages instead of pixels.</li>
                  </ul>
              </p>

              <p class="tab">
                You see that YouTube playlist up there at the top?
                Well, YouTube told me to use this code to embed in my blog post:
    <pre>
      <code>
      &lt;iframe width="560" height="315" src="//www.youtube.com/embed/
      EgTekW_Q99Y?list=PLanvKbpjZonTJpSoZzm4usIS122onHWzs" frameborder="0"
      allowfullscreen>&lt;/iframe&gt;
      </code>
    </pre>
              </p>

              <p class="tab">
                While putting this playlist into my blog post like this looked fine
                on the laptop I'm using right now, the playlist looked weird on my phone
                (a Nexus 4, if you care about that kind of thing), jutting out
                of the layout because it was bigger than everything else on the page.
                The playlist also looked pretty dismal on my desktop computer, showing up
                really small compared to everything else.
              </p>

              <p class="tab">
                I googled something like "YouTube width iframe fluid" and found
                <a href="http://css-tricks.com/NetMag/FluidWidthVideo/Article-FluidWidthVideo.php" target="_blank">
                this page</a>. While Responsive Web Design does mean using media
                queries, I also don't feel comfortable using media queries just
                yet, so changing the Youtube video from being fixed dimensions to
                something more fluid seems like the right approach for now. I
                simply took out the fixed width dimensions in the <code>&lt;iframe&gt;
                </code> tags and wrapped the <code>&lt;iframe&gt;</code> tags
                within a div:
              </p>

    <pre>
      <code>
        &lt;div class="videowrap">
        &lt;iframe src="//www.youtube.com/embed/videoseries?list=
        PLanvKbpjZonTJpSoZzm4usIS122onHWzs" frameborder="0"
        allowfullscreen>&lt;/iframe&gt;
        &lt;/div&gt;
      </code>
    </pre>

            <p class="tab">
              Here is what my CSS looks like, adapting
              <a href="http://css-tricks.com/NetMag/FluidWidthVideo/Article-FluidWidthVideo.php" target="_blank">
              CSS-Tricks'</a> approach, which is itself taken from
              <a href="http://alistapart.com/article/creating-intrinsic-ratios-for-video" target="_blank">
              Thierry Koblent's tricks</a>:
            </p>
    <pre>
      <code>
              .videowrap {
                  position: relative;
                  padding-bottom: 56.25%;
                  padding-top: 2em;
                  height: 0;
                  overflow: hidden;
              }

              .videowrap iframe {
                  position: absolute;
                  top: 0;
                  left: 4em;
                  width: 80%;
                  height: 80%;
              }

      </code>
    </pre>

          <p class="tab">
            The basic idea is that we use CSS to make a box the ratio we want it to
            be, put the video in that box, and then set the video to fit inside
            the box.
          </p>

            </div>

            </article>
